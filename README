August 2015.

We are ready on our end for the remote Aravis testing on our controller.
Here some technical info that should be useful for you:

"The OS is Ubuntu 12.04 LTS and is fully up-to-date.

The installed VNC server is x11vnc and we have successfully connected with
sshvnc from another Ubuntu 12.04 machine.

The way we want to proceed is to set up ssh remote port-forwarding.  
For this, we require ssh access to your machine.  We will set up a port by
running
       ssh -C -R 5950:localhost:5900 -l <username> <host>
where <username> and <host> are for your machine.  You will need to set
these up for us.
Once this is done you can access the virtual machine here with a vnc viewer 
on your machine by connecting to 'localhost:50’

Similarly, we will provide an ssh tunnel which you will be able to access
via :
        ssh -p <port> -l guest-admin localhost
where we should agree on a port.  

For paranoia’s sake we will communicate the ssh passwords via telephone.

As user guest-admin you will have access to root privileges via sudo.

The ethernet port for the controller will be 'eth2'. “


You will be connected on one of our EMCCD controller and we will provide you
with some basic serial command.

Let us know if you need anything else and when you would be available to
begin de testing.




You will be connected to a controller without CCD, which means the images
you will be acquiring will only consists of electronic noise. The images you
will receive will have 136 x 134 pixels plus 2 overscan lines.

All of the information I sent you before is accurate, except that the
Ethernet interface for the controller is ‘eth1’.  You might also want to
know that the controller’s GigE interface has IP address 169.254.138.130 on
subnet mask 255.255.0.0

The tunnel to your ssh into our machine is available at port 2230 on your
localhost. The password is: n3w~Nu4u

As discussed, the commands you should send (as ASCII characters) over the
serial connection should be :

'msg [string]’ where the argument [string] is returned

‘ld 1’ which will load a readout mode and in the process return certain
parameters relating to the readout mode

‘re 1’ will cause the controller to return a single image

‘re -1’ will cause the controller to return images continuously

‘abort’ will cause the controller to stop sending images

Hopefully, everything will go well tomorrow morning and you won't need my
help. I will check my emails first thing in the morning.




Hi Alastair,

I did not have the information on hand so I had to check with my team. 

We open the serial port with PvDeviceSerial0 not PvDeviceSerialBulk0
and the PvGenParameterArray properties related to the serial port that we
set are as follows : 

“Uart0BaudRate” = “Baud115200"

“Uart0NumOfStopBits" = "One"

“Uart0Parity" = “None"

“Uart0Loopback” = false

We will leave the computer and controller (no CCD attached) at your disposal
as long as you need, so please, contact me when you are finished.

Feel free to email me or call me should you have any question.



For mac pro in Durham, need to set IP of eth0 to:
169.254.64.1
mask 255.255.0.0
mtu 9000
To match that returned by:
arv-tool-0.4 control GevCurrentIPAddress
